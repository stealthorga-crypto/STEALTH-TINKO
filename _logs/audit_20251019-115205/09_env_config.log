TASK 9: ENVIRONMENT & CONFIGURATION SCAN
========================================

Backend .env references:
app/db.py:SQLALCHEMY_DATABASE_URL = os.getenv("DATABASE_URL", "sqlite:///./tinko.db")
app/main.py:SENTRY_DSN = os.getenv('SENTRY_DSN')
app/main.py:        environment=os.getenv('ENVIRONMENT', 'development'),
app/main.py:        traces_sample_rate=float(os.getenv('SENTRY_TRACES_SAMPLE_RATE', '0.1')),
app/main.py:        profiles_sample_rate=float(os.getenv('SENTRY_PROFILES_SAMPLE_RATE', '0.1')),
app/psp/dispatcher.py:            api_key = os.getenv("STRIPE_SECRET_KEY")
app/psp/dispatcher.py:            webhook_secret = os.getenv("STRIPE_WEBHOOK_SECRET")
app/psp/dispatcher.py:            api_key = os.getenv("RAZORPAY_KEY_ID")
app/psp/dispatcher.py:            api_secret = os.getenv("RAZORPAY_KEY_SECRET")
app/routers/dev.py:        base = os.getenv("PUBLIC_BASE_URL", "http://127.0.0.1:8000")
app/routers/payments.py:    if not os.getenv("STRIPE_SECRET_KEY"):
app/routers/payments.py:    if stripe is None or not os.getenv("STRIPE_SECRET_KEY"):
app/routers/payments.py:    stripe.api_key = os.getenv("STRIPE_SECRET_KEY")
app/routers/recoveries.py:BASE_URL = os.getenv("PUBLIC_BASE_URL", "http://127.0.0.1:8000")
app/routers/recoveries.py:            "url": f"{os.getenv('PUBLIC_BASE_URL','http://127.0.0.1:8000')}/pay/retry/{r.token}",
app/routers/webhooks_stripe.py:    if stripe is None or not os.getenv("STRIPE_WEBHOOK_SECRET"):
app/routers/webhooks_stripe.py:    secret = os.getenv("STRIPE_WEBHOOK_SECRET")
app/security.py:    secret = secret or os.getenv('JWT_SECRET', 'dev-secret-change-in-production')
app/security.py:    minutes = minutes or int(os.getenv('JWT_EXPIRY_MINUTES', '1440'))
app/security.py:    algorithm = algorithm or os.getenv('JWT_ALGORITHM', 'HS256')
app/security.py:    secret = secret or os.getenv('JWT_SECRET', 'dev-secret-change-in-production')
app/security.py:    algorithm = algorithm or os.getenv('JWT_ALGORITHM', 'HS256')
app/server.py:db = DB(os.getenv("TINKO_DB_URL", "sqlite:///tinko.db"))
app/services/payments/stripe_adapter.py:        self.api_key = api_key or os.getenv("STRIPE_SECRET_KEY")
app/services/stripe_service.py:stripe.api_key = os.getenv("STRIPE_SECRET_KEY")
app/services/stripe_service.py:            base_url = os.getenv("BASE_URL", "http://localhost:3000")
app/services/stripe_service.py:                        "url": os.getenv("BASE_URL", "http://localhost:3000") + "/pay/success"
app/services/stripe_service.py:        webhook_secret = os.getenv("STRIPE_WEBHOOK_SECRET")
app/tasks/notification_tasks.py:        smtp_host = os.getenv('SMTP_HOST', 'localhost')
app/tasks/notification_tasks.py:        smtp_port = int(os.getenv('SMTP_PORT', '1025'))

.env.example check:
-rw-r--r-- 1 srina 197609 2674 Oct 18 12:43 .env.example

Frontend env check:
tinko-console/app/(console)/dashboard/_components/recovery-feed.tsx:  if (!process.env.NEXT_PUBLIC_API_URL) {
tinko-console/app/pay/retry/[token]/page.tsx:    const apiBase = process.env.NEXT_PUBLIC_API_URL || "http://127.0.0.1:8000";
tinko-console/app/pay/retry/[token]/page.tsx:  const apiBase = process.env.NEXT_PUBLIC_API_URL || "http://127.0.0.1:8000";
tinko-console/app/pay/retry/[token]/page.tsx:      if (process.env.NEXT_PUBLIC_PAYMENTS_DEMO === "true") {
tinko-console/app/pay/retry/[token]/page.tsx:        {process.env.NEXT_PUBLIC_PAYMENTS_DEMO !== "true" && (
tinko-console/app/sitemap.ts:  const baseUrl = process.env.NEXTAUTH_URL || "https://www.tinko.in";
tinko-console/lib/api.ts:const baseUrl = process.env.NEXT_PUBLIC_API_URL ?? "";
tinko-console/lib/auth/auth.ts:  secret: process.env.NEXTAUTH_SECRET || process.env.AUTH_SECRET,
tinko-console/lib/sentry.ts:  const SENTRY_DSN = process.env.NEXT_PUBLIC_SENTRY_DSN;
tinko-console/lib/sentry.ts:      environment: process.env.NEXT_PUBLIC_ENVIRONMENT || 'development',
tinko-console/lib/sentry.ts:      tracesSampleRate: parseFloat(process.env.NEXT_PUBLIC_SENTRY_TRACES_SAMPLE_RATE || '0.1'),
tinko-console/lib/sentry.ts:      debug: process.env.NODE_ENV === 'development',
tinko-console/lib/sentry.ts:      enabled: process.env.NODE_ENV === 'production',
tinko-console/lib/sentry.ts:  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {
tinko-console/lib/sentry.ts:  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {
tinko-console/lib/sentry.ts:  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {
tinko-console/lib/sentry.ts:  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {
