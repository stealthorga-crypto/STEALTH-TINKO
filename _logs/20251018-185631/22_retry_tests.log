time="2025-10-18T19:07:59+05:30" level=warning msg="C:\\Users\\srina\\OneDrive\\Documents\\Downloads\\Stealth-Reecovery-20251010T154256Z-1-001\\Stealth-Reecovery\\docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
/usr/local/lib/python3.11/site-packages/pytest_asyncio/plugin.py:207: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts ==============================
platform linux -- Python 3.11.14, pytest-8.3.4, pluggy-1.6.0 -- /usr/local/bin/python
cachedir: .pytest_cache
rootdir: /app
plugins: anyio-4.11.0, asyncio-0.25.2
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None
collecting ... collected 9 items

tests/test_retry.py::test_calculate_next_retry PASSED                    [ 11%]
tests/test_retry.py::test_create_retry_policy FAILED                     [ 22%]
tests/test_retry.py::test_list_retry_policies FAILED                     [ 33%]
tests/test_retry.py::test_get_active_policy FAILED                       [ 44%]
tests/test_retry.py::test_deactivate_policy FAILED                       [ 55%]
tests/test_retry.py::test_get_retry_stats FAILED                         [ 66%]
tests/test_retry.py::test_notification_log_creation PASSED               [ 77%]
tests/test_retry.py::test_get_attempt_notifications FAILED               [ 88%]
tests/test_retry.py::test_trigger_immediate_retry FAILED                 [100%]

=================================== FAILURES ===================================
___________________________ test_create_retry_policy ___________________________
tests/test_retry.py:141: in test_create_retry_policy
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = <Response [401 Unauthorized]>.status_code
___________________________ test_list_retry_policies ___________________________
tests/test_retry.py:169: in test_list_retry_policies
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = <Response [401 Unauthorized]>.status_code
____________________________ test_get_active_policy ____________________________
tests/test_retry.py:194: in test_get_active_policy
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = <Response [401 Unauthorized]>.status_code
____________________________ test_deactivate_policy ____________________________
tests/test_retry.py:221: in test_deactivate_policy
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = <Response [401 Unauthorized]>.status_code
_____________________________ test_get_retry_stats _____________________________
tests/test_retry.py:233: in test_get_retry_stats
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = <Response [401 Unauthorized]>.status_code
________________________ test_get_attempt_notifications ________________________
tests/test_retry.py:322: in test_get_attempt_notifications
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = <Response [401 Unauthorized]>.status_code
_________________________ test_trigger_immediate_retry _________________________
tests/test_retry.py:354: in test_trigger_immediate_retry
    assert response.status_code in [200, 500]  # 500 is ok if celery isn't running
E   assert 401 in [200, 500]
E    +  where 401 = <Response [401 Unauthorized]>.status_code
=============================== warnings summary ===============================
app/auth_schemas.py:25
  /app/app/auth_schemas.py:25: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/
    class UserResponse(UserBase):

app/auth_schemas.py:36
  /app/app/auth_schemas.py:36: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/
    class OrganizationResponse(BaseModel):

app/routers/retry_policies.py:29
  /app/app/routers/retry_policies.py:29: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/
    class RetryPolicyResponse(BaseModel):

app/routers/retry_policies.py:55
  /app/app/routers/retry_policies.py:55: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.12/migration/
    class NotificationLogResponse(BaseModel):

app/main.py:108
  /app/app/main.py:108: DeprecationWarning: 
          on_event is deprecated, use lifespan event handlers instead.
  
          Read more about it in the
          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).
          
    @app.on_event("startup")

../usr/local/lib/python3.11/site-packages/fastapi/applications.py:4574
  /usr/local/lib/python3.11/site-packages/fastapi/applications.py:4574: DeprecationWarning: 
          on_event is deprecated, use lifespan event handlers instead.
  
          Read more about it in the
          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).
          
    return self.router.on_event(event_type)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_retry.py::test_create_retry_policy - assert 401 == 200
FAILED tests/test_retry.py::test_list_retry_policies - assert 401 == 200
FAILED tests/test_retry.py::test_get_active_policy - assert 401 == 200
FAILED tests/test_retry.py::test_deactivate_policy - assert 401 == 200
FAILED tests/test_retry.py::test_get_retry_stats - assert 401 == 200
FAILED tests/test_retry.py::test_get_attempt_notifications - assert 401 == 200
FAILED tests/test_retry.py::test_trigger_immediate_retry - assert 401 in [200...
=================== 7 failed, 2 passed, 6 warnings in 7.30s ====================
