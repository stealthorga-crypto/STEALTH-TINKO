name: Tinko Recovery CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'Stealth-Reecovery/**'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - 'Stealth-Reecovery/**' # Ignore nested duplicate tree

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: tinko
          POSTGRES_PASSWORD: tinko_password
          POSTGRES_DB: tinko_recovery_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run database migrations
      env:
        DATABASE_URL: postgresql://tinko:tinko_password@localhost:5432/tinko_recovery_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        alembic upgrade head
    
    - name: Run Python tests
      env:
        DATABASE_URL: postgresql://tinko:tinko_password@localhost:5432/tinko_recovery_test
        REDIS_URL: redis://localhost:6379/0
        JWT_SECRET: test-secret-key-for-ci
        STRIPE_SECRET_KEY: sk_test_dummy
      run: |
        pytest tests/ -v --tb=short --maxfail=10
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: tinko-console/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: tinko-console
      run: npm ci
    
    - name: Build frontend
      working-directory: tinko-console
      run: npm run build
    
    - name: Lint frontend
      working-directory: tinko-console
      run: npm run lint || true

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Build backend Docker image
      run: docker build -t tinko-recovery-backend .
    
    - name: Build frontend Docker image
      working-directory: tinko-console
      run: docker build -t tinko-recovery-frontend .
