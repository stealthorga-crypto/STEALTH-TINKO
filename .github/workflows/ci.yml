name: CI

on: [push, pull_request]

jobs:
  api:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip install python-dotenv ruff
          # Install package in editable mode only if the repo is packaged (pyproject/setup.py/setup.cfg)
          if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then
            pip install -e .
          fi

      - name: Lint (non-blocking)
        run: ruff check app tests || true

      - name: Ensure app is importable (PYTHONPATH)
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      # Optional debug step removed to keep workflow minimal and avoid YAML linters complaining

      - name: Run tests (hermetic CI)
        env:
          SKIP_DB: "1"
          SKIP_RAZORPAY_TESTS: "1"
          FEATURE_RAZORPAY_ALLOW_ORDER_CREATION: "off"
        run: pytest -q

  console:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tinko-console
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci || npm install
      - name: Typecheck
        run: npx tsc --noEmit || true
      - name: Build
        run: npm run build || true